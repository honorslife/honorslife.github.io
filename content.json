{"meta":{"title":"Honestlife","subtitle":"","description":"","author":"yurui","url":"https://honorslife.github.io","root":"/"},"pages":[],"posts":[{"title":"AliyunIotSDK","slug":"AliyunIotSDK","date":"2022-03-19T09:38:36.000Z","updated":"2022-03-19T09:45:27.746Z","comments":true,"path":"2022/03/19/AliyunIotSDK/","link":"","permalink":"https://honorslife.github.io/2022/03/19/AliyunIotSDK/","excerpt":"","text":"@TOC本例TSL物模型： 12345678910111213141516171819202122232425262728293031323334&#123; &quot;schema&quot;: &quot;https://iotx-tsl.oss-ap-southeast-1.aliyuncs.com/schema.json&quot;, &quot;profile&quot;: &#123; &quot;version&quot;: &quot;1.0&quot;, &quot;productKey&quot;: &quot;a10rLI27mdn&quot; &#125;, &quot;properties&quot;: [], &quot;events&quot;: [ &#123; &quot;identifier&quot;: &quot;testid&quot;, &quot;name&quot;: &quot;test&quot;, &quot;type&quot;: &quot;info&quot;, &quot;required&quot;: false, &quot;desc&quot;: &quot;事件测试&quot;, &quot;method&quot;: &quot;thing.event.testid.post&quot;, &quot;outputData&quot;: [ &#123; &quot;identifier&quot;: &quot;outputid&quot;, &quot;name&quot;: &quot;output&quot;, &quot;dataType&quot;: &#123; &quot;type&quot;: &quot;bool&quot;, &quot;specs&quot;: &#123; &quot;0&quot;: &quot;关&quot;, &quot;1&quot;: &quot;开&quot; &#125; &#125; &#125; ] &#125; ], &quot;services&quot;: [], &quot;functionBlockId&quot;: &quot;001&quot;, &quot;functionBlockName&quot;: &quot;事件01&quot;&#125; 本例应用的代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include &lt;ESP8266WiFi.h&gt;#include &lt;ArduinoJson.h&gt;#include &lt;AliyunIoTSDK.h&gt;AliyunIoTSDK iot;static WiFiClient espClient;#define PRODUCT_KEY &quot;xxxxxxx&quot;#define DEVICE_NAME &quot;xxxxxxx&quot;#define DEVICE_SECRET &quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;#define REGION_ID &quot;cn-shanghai&quot;#define WIFI_SSID &quot;xxxxxxx&quot;#define WIFI_PASSWD &quot;xxxxxxx&quot;void wifiInit(const char *ssid, const char *passphrase)&#123; WiFi.mode(WIFI_STA); WiFi.begin(ssid, passphrase); WiFi.setAutoConnect (true); WiFi.setAutoReconnect (true); while (WiFi.status() != WL_CONNECTED) &#123; delay(1000); Serial.println(&quot;WiFi not Connect&quot;); &#125; Serial.println(&quot;Connected to AP&quot;);&#125;void setup()&#123; Serial.begin(115200); wifiInit(WIFI_SSID, WIFI_PASSWD); AliyunIoTSDK::begin(espClient, PRODUCT_KEY, DEVICE_NAME, DEVICE_SECRET, REGION_ID); // 绑定属性回调 AliyunIoTSDK::bindData(&quot;testid&quot;, powerCallback); &#125;unsigned long lastMsMain = 0;void loop()&#123; AliyunIoTSDK::loop(); if (millis() - lastMsMain &gt;= 5000) &#123; lastMsMain = millis(); // 发送事件到阿里云平台 AliyunIoTSDK::sendEvent(“testid&quot;,a); &#125;&#125; 一、遇到的问题及解决方法1. 提示未使用json格式 用&lt;arduinojson.h&gt;库捏一个json数据后，把生成的变量a传递到AliyunIoTSDK::sendEvent();这个函数的第二个参数中，方法如下：123456789101112131415161718StaticJsonDocument&lt;200&gt; doc;//创建一个名字叫doc的隐藏json文档（因为不需要传递到最终函数中）StaticJsonDocument&lt;200&gt; doc1;//再创建一个json文档，因为json数据需要多层嵌套doc1[&quot;id&quot;] = &quot;123&quot;;doc1[&quot;version&quot;] = &quot;1.0&quot;;doc1[&quot;method&quot;] = &quot;thing.event.testid.post&quot;; JsonObject myO = doc.createNestedObject(&quot;Power&quot;); //添加一个对象节点myO[&quot;value&quot;] = &quot;on&quot;;JsonObject myO1 = doc.createNestedObject(&quot;Power1&quot;); //添加一个对象节点myO1[&quot;value1&quot;] = &quot;23.6&quot;;JsonObject myO2 = doc1.createNestedObject(&quot;params&quot;);//添加一个对象节点myO2[&quot;power&quot;] = myO;myO2[&quot;wf&quot;] = myO1;void a ;serializeJsonPretty(doc1, a); 结果编译结果提示数据类型错误 于是查阅&lt;AliyunIoTSDK.h&gt;文件内对函数中变量类型的定义，发现函数的第二个参数的数据类型为字符类型：123456/* * 发送事件到云平台（附带数据） * @param eventId 事件名，在阿里云物模型中定义好的 * @param param 字符串形式的json 数据，例如 &#123;&quot;$&#123;key&#125;&quot;:&quot;$&#123;value&#125;&quot;&#125; */ static void sendEvent(const char *eventId, const char *param); 于是定义一个 char a AliyunIoTSDK::sendEvent(&quot;testid&quot;,a); ——不成功 定义一个 const char *aAliyunIoTSDK::sendEvent(&quot;testid&quot;,a); ——不成功 参数直接换doc1AliyunIoTSDK::sendEvent(&quot;testid&quot;,doc1);——不成功 考虑使用esp官方SDK，太复杂——暂时放弃json数据类型的研究（以后再研究） 第二天决定不用变量传递了，将函数的第二个参数直接转义为字符串AliyunIoTSDK::sendEvent(&quot;testid&quot;,&quot;\\&quot;output\\&quot;:\\&quot;0\\&quot;&quot;);2. 阿里云5096错误阿里云官方文档给出的错误原因： 物模型中未定义事件，或事件入参与定义不符。注意： 如果是自定义物模型模块中的事件，需拼接自定义模块标识符，格式为{tsl.functionBlockId}:{tsl.event.identifier}。 所以拼接模块id和事件id AliyunIoTSDK::sendEvent(“001:testid&quot;,&quot;\\&quot;output\\&quot;:\\“0\\&quot;&quot;);——5096问题解决3. 阿里云6304错误阿里云官方文档给出的错误原因： TSL校验时，传入的参数在结构体中不存在。 添加value(提示output参数不存在) AliyunIoTSDK::sendEvent(“001:testid&quot;,&quot;001:testid&quot;,\\&quot;value\\&quot;:&#123;\\&quot;output\\&quot;:\\&quot;0\\&quot;&#125;&#125;&quot;);——不成功 添加空格 AliyunIoTSDK::sendEvent(“001:testid&quot;,&quot;001:testid&quot;,\\&quot;value\\&quot;: &#123;\\&quot;output\\&quot;: \\&quot;0\\&quot;&#125;&#125;&quot;);——不成功 把“0”字符串改为数值 AliyunIoTSDK::sendEvent(“001:testid&quot;,&quot;001:testid&quot;,\\&quot;value\\&quot;:&#123;\\&quot;output\\&quot;:\\0&#125;&#125;&quot;);——不成功 改输出参数名称为输出参数标识符 AliyunIoTSDK::sendEvent(“001:testid&quot;,&quot;001:testid&quot;,\\&quot;value\\&quot;:&#123;\\&quot;outputid\\&quot;:\\&quot;0\\&quot;&#125;&#125;&quot;); 成功！二、总结 学会查阅头文件 学会查看官方文档，逐逐字逐句斟酌文档含义 上报的json数据中要键值对应，key是TSL物模型中的标识符，value要对应设置好的数据类型 可以不用加value键，有真实参数键值就可以 第二个函数参数不用加{“id”: “123”,”version”:”1.0”,”params”:”method”:”thing.event.001:testid.post”}，AliyunIoTSDK库会自动加(6304提示method不存在的可能所在)&nbsp;&nbsp;&nbsp; 如果有其他问题可以评论我们一起交流讨论","categories":[],"tags":[{"name":"arduino库使用","slug":"arduino库使用","permalink":"https://honorslife.github.io/tags/arduino%E5%BA%93%E4%BD%BF%E7%94%A8/"}]}],"categories":[],"tags":[{"name":"arduino库使用","slug":"arduino库使用","permalink":"https://honorslife.github.io/tags/arduino%E5%BA%93%E4%BD%BF%E7%94%A8/"}]}